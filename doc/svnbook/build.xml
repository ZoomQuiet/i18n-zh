<?xml version="1.0" encoding="UTF-8"?>
<project name="svnbook" default="pdf">

  <property file="build.properties"/>

  <path id="lib.classpath">
    <fileset dir="${ant.home}/lib">
      <include name="*.jar"/>
    </fileset>
    <fileset dir="${fop.home}">
      <include name="**/*.jar"/>
    </fileset>
    <fileset dir="${usr.share.java}">
      <include name="**/*.jar"/>
    </fileset>
    <pathelement location="${usr.share.java}"/>
  </path>

  <path id="xep.classpath">
    <fileset dir="${xep.home}/lib">
      <include name="*.jar"/>
    </fileset>
  </path>

  <target name="usage">
    <echo message="Use the -projecthelp option instead"/>
  </target>

  <target name="clean" description="Clean the build directory">
    <delete dir="build"/>
  </target>

  <target name="clean-svn">
    <delete>
      <fileset dir="${basedir}" excludes="**/.svn"/>
    </delete>
  </target>

  <target name="init" description="Check runtime class">
    <available file="build.properties" property="properties.present"/>
    <fail message="Please create your build.properties from build.tmpl.properties !" unless="properties.present"/>

    <condition property="saxon.present">
      <and>
        <available classname="com.icl.saxon.StyleSheet" classpathref="lib.classpath"/>
      </and>
    </condition>
    <fail message="Saxon 6.5 Support NOT Present !" unless="saxon.present"/>

    <echo message="java.version: ${java.version}"/>
  </target>

  <target name="all" description="Generate document - pdf,html,chm">
    <antcall target="pdf"/>
    <antcall target="html"/>
    <antcall target="chm"/>
  </target>

  <target name="updatepo.init" depends="init">
    <uptodate property="pot.isUpToDate" targetfile="po/svnbook.pot">
      <srcfiles dir="source" includes="book.xml"/>
    </uptodate>
  </target>

  <target name="updatepo" depends="updatepo.init" unless="pot.isUpToDate"
        description="Generate POTemplate">
    <echo message="Making pot ..."/>
    <exec dir="${basedir}/po" executable="python" failonerror="true">
      <arg value="../xml2po/xml2po.py"/>
      <arg value="-o"/>
      <arg value="book.pot"/>
      <arg value="../source/book.xml"/>
    </exec>

    <echo message="Merging zh.po ..."/>
    <exec dir="${basedir}/po" executable="msgmerge">
      <arg value="--sort-by-file"/>
      <arg value="--width=80"/>
      <arg value="-o"/>
      <arg value="zh-tmp.po"/>
      <arg value="zh.po"/>
      <arg value="book.pot"/>
    </exec>
    <move file="po/zh-tmp.po" tofile="po/zh.po"/>
    <fixcrlf srcdir="${basedir}" encoding="UTF-8" includes="source/book.xml,po/book.pot,po/zh.po" eol="lf"/>
  </target>

  <target name="translate.init">
    <uptodate property="translate.isUpToDate" targetfile="build/zh/book.xml">
      <srcfiles dir="source" includes="book.xml"/>
      <srcfiles dir="po" includes="zh.po"/>
    </uptodate>
  </target>

  <target name="translate" depends="translate.init" unless="translate.isUpToDate"
        description="Translate document">
    <mkdir dir="build/zh"/>
    <echo message="Translating to zh ..."/>
    <exec dir="${basedir}/xml2po" executable="python" failonerror="true">
      <arg value="xml2po.py"/>
      <arg value="-l"/>
      <arg value="zh-cn"/>
      <arg value="-p"/>
      <arg value="../po/zh.po"/>
      <arg value="-o"/>
      <arg value="../build/zh/book.xml"/>
      <arg value="../source/book.xml"/>
    </exec>
    <delete file="xml2po/.xml2po.mo"/>
  </target>

  <target name="html.init">
    <uptodate property="html.isUpToDate" targetfile="build/zh/svnbook/.done">
      <srcfiles dir="source" includes="book.xml"/>
      <srcfiles dir="po" includes="zh.po"/>
      <srcfiles dir="stylesheets" includes="html.xsl"/>
      <srcfiles dir="stylesheets/zh" includes="html.xsl"/>
    </uptodate>
  </target>

  <target name="html" depends="translate,html.init" unless="html.isUpToDate"
        description="Generate document - html">
    <copy todir="build/zh/svnbook/images">
      <fileset dir="source/images" includes="*.png"/>
      <fileset dir="${docbook.xsl}/images" includes="**/*.png"/>
    </copy>

    <echo message="Making html ..."/>
    <!-- exec dir="${basedir}/build/zh/svnbook" executable="xsltproc" failonerror="true">
      <arg value="- -nonet"/>
      <arg value="../../../stylesheets/zh/html.xsl"/>
      <arg value="../book.xml"/>
    </exec -->
    <java classname="com.icl.saxon.StyleSheet" fork="true" maxmemory="512m"
          failonerror="true" dir="${basedir}/build/zh/svnbook">
      <classpath refid="lib.classpath"/>
      <arg value="-x"/>
      <arg value="org.apache.xml.resolver.tools.ResolvingXMLReader"/>
      <arg value="-y"/>
      <arg value="org.apache.xml.resolver.tools.ResolvingXMLReader"/>
      <arg value="-r"/>
      <arg value="org.apache.xml.resolver.tools.CatalogResolver"/>
      <arg value="../book.xml"/>
      <arg value="../../../stylesheets/zh/html.xsl"/>
    </java>
    <touch file="build/zh/svnbook/.done"/>
  </target>

  <target name="chm.init">
    <uptodate property="chm.isUpToDate" targetfile="build/zh/svnbook-zh.chm">
      <srcfiles dir="source" includes="book.xml"/>
      <srcfiles dir="po" includes="zh.po"/>
      <srcfiles dir="stylesheets" includes="chm.xsl"/>
      <srcfiles dir="stylesheets/zh" includes="chm.xsl"/>
    </uptodate>
  </target>

  <target name="chm" depends="translate,chm.init" unless="chm.isUpToDate"
        description="Generate document - chm">
    <fail>
      <condition>
        <not>
          <os family="windows"/>
        </not>
      </condition>
      This target only work on windows !
    </fail>

    <copy todir="build/zh/htmlhelp/images">
      <fileset dir="source/images" includes="*.png"/>
      <fileset dir="${docbook.xsl}/images" includes="**/*.png"/>
    </copy>

    <echo message="Making chm ..."/>
    <exec dir="${basedir}/build/zh" executable="xmllint">
      <arg value="--encode"/>
      <arg value="GB18030"/>
      <arg value="--output"/>
      <arg value="book-GB18030.xml"/>
      <arg value="book.xml"/>
    </exec>
    <!--Must use GB18030 encoding and xsltproc for chm format !-->
    <exec dir="${basedir}/build/zh" executable="xsltproc" failonerror="true">
      <arg value="--nonet"/>
      <arg value="--catalogs"/>
      <arg value="../../stylesheets/zh/chm.xsl"/>
      <arg value="book-GB18030.xml"/>
    </exec>

    <exec dir="${basedir}/build/zh" executable="hhc" failonerror="false">
      <arg value="htmlhelp.hhp"/>
    </exec>
    <delete dir="build/zh/htmlhelp"/>
    <delete file="build/zh/toc.hhc"/>
    <delete file="build/zh/index.hhk"/>
    <delete file="build/zh/htmlhelp.hhp"/>
  </target>


  <target name="pdf.init">
    <uptodate property="pdf.isUpToDate" targetfile="build/zh/svnbook-zh.pdf">
      <srcfiles dir="source" includes="book.xml"/>
      <srcfiles dir="po" includes="zh.po"/>
    </uptodate>
  </target>

  <target name="pdf"  depends="translate,pdf.init" unless="pdf.isUpToDate"
        description="Generate document - pdf">
    <copy todir="build/zh/images">
      <fileset dir="source/images" includes="*.png"/>
      <fileset dir="${docbook.xsl}/images" includes="**/*.png"/>
    </copy>

    <echo message="Making fo ..."/>
    <java classname="com.icl.saxon.StyleSheet" fork="true" maxmemory="512m"
          failonerror="true" dir="${basedir}">
      <classpath refid="lib.classpath"/>
      <arg value="-x"/>
      <arg value="org.apache.xml.resolver.tools.ResolvingXMLReader"/>
      <arg value="-y"/>
      <arg value="org.apache.xml.resolver.tools.ResolvingXMLReader"/>
      <arg value="-r"/>
      <arg value="org.apache.xml.resolver.tools.CatalogResolver"/>
      <arg value="-o"/>
      <arg value="build/zh/svnbook.fo"/>
      <arg value="build/zh/book.xml"/>
      <arg value="stylesheets/zh/fo.xsl"/>
      <arg value="fop1.extensions=1"/>
      <arg value="title.font.family=${fop.title.font.family}"/>
      <arg value="body.font.family=${fop.body.font.family}"/>
      <arg value="sans.font.family=${fop.sans.font.family}"/>
      <arg value="ingbat.font.family=${fop.ingbat.font.family}"/>
      <arg value="monospace.font.family=${fop.monospace.font.family}"/>
    </java>

    <echo message="Making pdf ..."/>
    <java classname="${fop.class}" fork="true" maxmemory="512m"
          failonerror="true" dir="${basedir}/build/zh">
      <classpath refid="lib.classpath"/>
      <arg value="-c"/>
      <arg value="${fop.home}/conf/userconfig.xml"/>
      <arg value="svnbook.fo"/>
      <arg value="svnbook-zh.pdf"/>
    </java>
  </target>

  <target name="pdf-xep" depends="translate,pdf.init" unless="pdf.isUpToDate"
        description="Generate document - pdf - xep">
    <copy todir="build/zh/images">
      <fileset dir="source/images" includes="*.png"/>
      <fileset dir="${docbook.xsl}/images" includes="**/*.png"/>
    </copy>

    <echo message="Making fo ..."/>
    <java classname="com.icl.saxon.StyleSheet" fork="true" maxmemory="512m"
          failonerror="true" dir="${basedir}">
      <classpath refid="lib.classpath"/>
      <arg value="-x"/>
      <arg value="org.apache.xml.resolver.tools.ResolvingXMLReader"/>
      <arg value="-y"/>
      <arg value="org.apache.xml.resolver.tools.ResolvingXMLReader"/>
      <arg value="-r"/>
      <arg value="org.apache.xml.resolver.tools.CatalogResolver"/>
      <arg value="-o"/>
      <arg value="build/zh/svnbook.fo"/>
      <arg value="build/zh/book.xml"/>
      <arg value="stylesheets/zh/fo.xsl"/>
      <arg value="xep.extensions=1"/>
    </java>

    <echo message="Making pdf ..."/>
    <java classname="com.renderx.xep.XSLDriver" fork="true" maxmemory="512m"
          failonerror="true" dir="${basedir}/build/zh">
      <jvmarg value="-Xss512k"/>
      <classpath refid="xep.classpath"/>
      <arg value="-DCONFIG=${xep.home}/xep.xml"/>
      <arg value="-quiet"/>
      <arg value="svnbook.fo"/>
      <arg value="svnbook-zh.pdf"/>
    </java>
  </target>

  <target name="svnbook.init">
    <uptodate property="svnbook.isUpToDate" targetfile="build/en/svnbook.pdf">
      <srcfiles dir="source" includes="book.xml"/>
      <srcfiles dir="stylesheets" includes="fo.xsl"/>
    </uptodate>
  </target>

  <target name="svnbook" depends="svnbook.init" unless="svnbook.isUpToDate"
        description="Generate document - english(pdf)">
    <copy todir="build/en/images">
      <fileset dir="source/images" includes="*.png"/>
      <fileset dir="${docbook.xsl}/images" includes="**/*.png"/>
    </copy>
    <copy file='source/book.xml' todir="build/en"/>

    <echo message="Making fo ..."/>
    <java classname="com.icl.saxon.StyleSheet" fork="true" maxmemory="512m"
          failonerror="true" dir="${basedir}/build/en">
      <classpath refid="lib.classpath"/>
      <arg value="-x"/>
      <arg value="org.apache.xml.resolver.tools.ResolvingXMLReader"/>
      <arg value="-y"/>
      <arg value="org.apache.xml.resolver.tools.ResolvingXMLReader"/>
      <arg value="-r"/>
      <arg value="org.apache.xml.resolver.tools.CatalogResolver"/>
      <arg value="-o"/>
      <arg value="svnbook.fo"/>
      <arg value="book.xml"/>
      <arg value="../../stylesheets/fo.xsl"/>
      <arg value="fop1.extensions=1"/>
      <arg value="title.font.family=${fop.title.font.family}"/>
      <arg value="body.font.family=${fop.body.font.family}"/>
      <arg value="sans.font.family=${fop.sans.font.family}"/>
      <arg value="ingbat.font.family=${fop.ingbat.font.family}"/>
      <arg value="monospace.font.family=${fop.monospace.font.family}"/>
    </java>

    <echo message="Making pdf ..."/>
    <java classname="${fop.class}" fork="true" maxmemory="512m"
          failonerror="true" dir="${basedir}/build/en">
      <classpath refid="lib.classpath"/>
      <arg value="-c"/>
      <arg value="${fop.home}/conf/userconfig.xml"/>
      <arg value="svnbook.fo"/>
      <arg value="svnbook.pdf"/>
    </java>
  </target>

  <target name="svnbook-xep" depends="svnbook.init" unless="svnbook.isUpToDate"
        description="Generate document - english(pdf) - xep">
    <copy todir="build/en/images">
      <fileset dir="source/images" includes="*.png"/>
      <fileset dir="${docbook.xsl}/images" includes="**/*.png"/>
    </copy>
    <copy file='source/book.xml' todir="build/en"/>

    <echo message="Making fo ..."/>
    <java classname="com.icl.saxon.StyleSheet" fork="true" maxmemory="512m"
          failonerror="true" dir="${basedir}/build/en">
      <jvmarg value="-Xss512k"/>
      <classpath refid="lib.classpath"/>
      <arg value="-x"/>
      <arg value="org.apache.xml.resolver.tools.ResolvingXMLReader"/>
      <arg value="-y"/>
      <arg value="org.apache.xml.resolver.tools.ResolvingXMLReader"/>
      <arg value="-r"/>
      <arg value="org.apache.xml.resolver.tools.CatalogResolver"/>
      <arg value="-o"/>
      <arg value="svnbook.fo"/>
      <arg value="book.xml"/>
      <arg value="../../stylesheets/fo.xsl"/>
      <arg value="xep.extensions=1"/>
    </java>

    <echo message="Making pdf ..."/>
    <java classname="com.renderx.xep.XSLDriver" fork="true" maxmemory="512m"
          failonerror="true" dir="${basedir}/build/en">
      <jvmarg value="-Xss512k"/>
      <classpath refid="xep.classpath"/>
      <arg value="-DCONFIG=${xep.home}/xep.xml"/>
      <arg value="-quiet"/>
      <arg value="svnbook.fo"/>
      <arg value="svnbook.pdf"/>
    </java>
  </target>

</project>
